/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Curso;

import config.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Stefan2
 */
public class RegistroCurso extends javax.swing.JFrame {

    /**
     * Creates new form RegistroCurso
     */
    public RegistroCurso() {
        initComponents();
        validacionNombre.setVisible(false);
        validacionCodigoCurso.setVisible(false);
        validacionGestiónCurso.setVisible(false);
        validacionIDCurso.setVisible(false);
    }
    Conexion myConecction = new Conexion();
    Connection conecction;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        inputNombreCurso = new javax.swing.JTextField();
        inputCódigoCurso = new javax.swing.JTextField();
        inputGestión = new javax.swing.JTextField();
        inputDescripcionCurso = new javax.swing.JTextField();
        botonRegCurso = new javax.swing.JButton();
        validacionNombre = new javax.swing.JLabel();
        validacionCodigoCurso = new javax.swing.JLabel();
        validacionGestiónCurso = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        validacionIDCurso = new javax.swing.JLabel();
        inputIdCurso = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("REGISTRO CURSO");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Por favor, ingrese los siguientes datos:");

        jLabel3.setText("*Nombre del curso:");

        jLabel4.setText("*Código del curso:");

        jLabel5.setText("*Gestión:");

        jLabel6.setText("Descripción:");

        inputNombreCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNombreCursoActionPerformed(evt);
            }
        });

        inputCódigoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCódigoCursoActionPerformed(evt);
            }
        });

        inputGestión.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputGestiónActionPerformed(evt);
            }
        });

        inputDescripcionCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputDescripcionCursoActionPerformed(evt);
            }
        });

        botonRegCurso.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonRegCurso.setText("Registrar Curso");
        botonRegCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegCursoActionPerformed(evt);
            }
        });

        validacionNombre.setForeground(new java.awt.Color(255, 102, 102));
        validacionNombre.setText("validación nombre curso");

        validacionCodigoCurso.setForeground(new java.awt.Color(255, 102, 102));
        validacionCodigoCurso.setText("validación código curso");

        validacionGestiónCurso.setForeground(new java.awt.Color(255, 102, 102));
        validacionGestiónCurso.setText("validación gestión curso ");

        jLabel7.setText("*Identificador del Curso:");

        validacionIDCurso.setForeground(new java.awt.Color(255, 102, 102));
        validacionIDCurso.setText("validación id curso");

        inputIdCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputIdCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(validacionGestiónCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputDescripcionCurso)
                                        .addComponent(inputGestión, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(validacionNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputNombreCurso, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                                        .addComponent(inputCódigoCurso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                                        .addComponent(validacionCodigoCurso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(inputIdCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(validacionIDCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(botonRegCurso)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(inputIdCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validacionIDCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputNombreCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(4, 4, 4)
                .addComponent(validacionNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(inputCódigoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validacionCodigoCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(inputGestión, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validacionGestiónCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputDescripcionCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botonRegCurso)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputNombreCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNombreCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNombreCursoActionPerformed

    private void inputCódigoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCódigoCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCódigoCursoActionPerformed

    private void inputGestiónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputGestiónActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputGestiónActionPerformed

    private void inputDescripcionCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputDescripcionCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputDescripcionCursoActionPerformed


    private void botonRegCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegCursoActionPerformed

        String nombreCurso = inputNombreCurso.getText();
        String codigoCurso = inputCódigoCurso.getText();
        String gestion = inputGestión.getText();
        String descripcionCurso = inputDescripcionCurso.getText();
        String idCurso = inputIdCurso.getText();
        int idCursoConvert = 0;
        int codigoCursoConvert = 0;

        validacionNombre.setVisible(false);
        validacionCodigoCurso.setVisible(false);
        validacionGestiónCurso.setVisible(false);
        validacionIDCurso.setVisible(false);

        boolean isValid = true;

        if (nombreCurso.isEmpty() || !nombreCurso.matches("^[a-zA-Z0-9 ]+$")) {
            /*JOptionPane.showMessageDialog(this, "Nombre del curso solo debe 
            contener números y letras");*/
            validacionNombre.setVisible(true);
            validacionNombre.setText("Nombre del curso solo debe contener "
                    + "números y letras");
            isValid = false;
        }

        /*if (nombreCurso.isEmpty()) {
            validacionNombre.setVisible(true);
            validacionNombre.setText("Nombre del curso es requerido, "
                    + "no puede ser vacío.");
            isValid = false;
        }*/
        if (!codigoCurso.matches("^[0-9 ]+$")) {
            validacionCodigoCurso.setVisible(true);
            /*JOptionPane.showMessageDialog(this, "Código del curso solo"
                    + "debe contener números.");*/
            validacionCodigoCurso.setText("Código del curso solo "
                    + "debe contener números.");
            isValid = false;
        }

        if (!gestion.matches("^[0-9- ]+$")) {
            validacionGestiónCurso.setVisible(true);
            validacionGestiónCurso.setText("Gestión solo debe tener números "
                    + "y símbolo '-'.");
            /*JOptionPane.showMessageDialog(this, "Gestión solo debe tener números "
                    + "y símbolo '-'. Nopuede ser campo vacío");*/
            isValid = false;
        }

        if (!idCurso.matches("^[0-9 ]+$")) {
            validacionIDCurso.setVisible(true);
            validacionIDCurso.setText("El ID del curso solo "
                    + "debe contener números.");
            isValid = false;
        }
        // Espacio reservado por si quiero validar descripción
        /*if (!descripcionCurso.matches("Patrón o expresión validar")) {
        JOptionPane.showMessageDialog(this, "Descripción inválida.");
        isValid = false;
        }
         */
        if (nombreCurso.trim().isEmpty()) {
            validacionNombre.setVisible(true);
            validacionNombre.setText("Nombre del curso es requerido, no puede ser vacío.");
            isValid = false;
        }

        if (codigoCurso.trim().isEmpty()) {
            validacionCodigoCurso.setVisible(true);
            validacionCodigoCurso.setText("Código del curso es requerido, no puede ser vacío.");
            isValid = false;
        }

        if (gestion.trim().isEmpty()) {
            validacionGestiónCurso.setVisible(true);
            validacionGestiónCurso.setText("Gestión es requerida, no puede ser vacía.");
            isValid = false;
        }

        if (idCurso.trim().isEmpty()) {
            validacionIDCurso.setVisible(true);
            validacionIDCurso.setText("ID es un campo obligatorio, no puede ser vacío.");
            isValid = false;
        }

        if (isValid) {
            idCursoConvert = Integer.parseInt(idCurso);
            codigoCursoConvert = Integer.parseInt(codigoCurso);
            try {
                if (validacionExistenciaEnBD(idCursoConvert)) {
                    JOptionPane.showMessageDialog(null, "El ID ya existe. Ingrese un ID diferente.");
                } else {
                    /* Si mis Inputs o entradas son válidas ejecuto mi acción 
                    para código futuro, p.e. cuando guarde o envie mis datos al servidor*/
                    PreparedStatement ps;
                    String sql;
                    //modelo.setNombreCoche(nombreCoche);
                    //modelo.setCilindradaCoche(cilindradaCoche);
                    try {
                        conecction = myConecction.getConnection();
                        sql = "INSERT INTO CURSO(IDCURSO, NOMBRECURSO,"
                                + " CODIGOCURSO, GESTION, DESCRIPCIONCURSO)"
                                + " VALUES (?, ?, ?, ?, ?)";
                        ps = conecction.prepareStatement(sql);
                        ps.setInt(1, idCursoConvert);
                        ps.setString(2, nombreCurso);
                        ps.setInt(3, codigoCursoConvert);
                        ps.setString(4, gestion);
                        ps.setString(5, descripcionCurso);
                        ps.executeUpdate();
                        
                        // Limpiando campos después de registrar un curso
                        // ya que no tome en cuenta en un inicio esto
                        inputNombreCurso.setText(""); 
                        inputCódigoCurso.setText(""); 
                        inputGestión.setText("");     
                        inputDescripcionCurso.setText(""); 
                        inputIdCurso.setText("");    
                        JOptionPane.showMessageDialog(null, "Curso registrado correctamente");
                                    
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error:" + e.getMessage());
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error:" + e.getMessage());
            }

        }
    }//GEN-LAST:event_botonRegCursoActionPerformed

    private void inputIdCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputIdCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputIdCursoActionPerformed

    // Añadiendo método de verificación de existencia de Id de Curso en la B.D.
    private boolean validacionExistenciaEnBD(int idCursoConvert) throws SQLException {
        String sql = "SELECT IDCURSO FROM CURSO WHERE IDCURSO = ?";
        conecction = myConecction.getConnection();
        PreparedStatement pst = conecction.prepareStatement(sql);
        pst.setInt(1, idCursoConvert);
        ResultSet resultSet = pst.executeQuery();
        /* Si el id existe enn mi B.D. me devolverá true 
        caso contrario false --v*/
        return resultSet.next();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroCurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonRegCurso;
    private javax.swing.JTextField inputCódigoCurso;
    private javax.swing.JTextField inputDescripcionCurso;
    private javax.swing.JTextField inputGestión;
    private javax.swing.JTextField inputIdCurso;
    private javax.swing.JTextField inputNombreCurso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel validacionCodigoCurso;
    private javax.swing.JLabel validacionGestiónCurso;
    private javax.swing.JLabel validacionIDCurso;
    private javax.swing.JLabel validacionNombre;
    // End of variables declaration//GEN-END:variables
}
